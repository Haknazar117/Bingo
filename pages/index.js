import Head from 'next/head'
import Image from 'next/image'
import SettingsIcon from '@material-ui/icons/Settings';
import AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';
import { IconButton } from '@material-ui/core';
import { useAuth } from '../contexts/AuthContext';
import MicrophoneIcon from '@heroicons/react/outline/MicrophoneIcon'
import SearchIcon from '@heroicons/react/outline/SearchIcon'
import { useRouter } from 'next/dist/client/router';
import {useRef} from 'react'
import XIcon from '@heroicons/react/solid/XIcon';

export default function Home() {
  let isAuth = false
  const {signIn, currentUser} = useAuth()
  const searchRef = useRef(null)
  const router = useRouter();

  if(currentUser) {
    isAuth = true
  }

  async function handleClick() {
    try {
      await signIn() 
    } catch {
      alert("Failed to sign in!")
    }
  }

  const search = e => {
    e.preventDefault()
    const term = searchRef.current.value

    if(!term) return

    router.push(`/search?term=${term}`)

  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <header className="flex w-full p-4 justify-between text-sm text-gray-700">
          <div className="flex space-x-4 items-center">
            <a className="link">About</a>
            <a className="link">Store</a>
          </div>

          <div className="flex space-x-2 items-center">
            <a className="link">My mail</a>
            <IconButton>
              <SettingsIcon/>
            </IconButton>
            {isAuth ?
            <div>
              <Image className="rounded-full cursor-pointer transition duration-150 transform hover:scale-110" loading="lazy" width={40} height={40} src={currentUser && currentUser.photoURL} alt="" />
            </div> : 
            <IconButton onClick={handleClick}>
              <AccountCircleOutlinedIcon/>  
            </IconButton>}
          </div>
      </header>
      <form onSubmit={search} className="flex flex-row flex-grow justify-center items-center mt-10">
        <Image src="/14483.jpg" alt="icon" loading="lazy" width={100} height={50}/>
        <div className="flex w-full ml-5 hover:shadow-lg focus-within:shadow-lg max-w-md rounded-lg
        border border-gray-200 px-5 py-3 items-center sm:max-w-xl lg:max-w-2xl">
          <input ref={searchRef} type="text" placeholder="Search..." className="flex-grow focus:outline-none " />
          <input type="submit" style={{display: 'none'}} />
          <XIcon 
            className="h-5 text-gray-500 cursor-pointer transition 
              duration 100 transform hover:scale-110"
            onClick={() => {searchRef.current.value=''}}/>
          <MicrophoneIcon className="ml-3 mr-3 h-5 text-red-500 border-r-2 pr-4 cursor-pointer "/>
          <hr style={{color: 'grey', backgroundColor: 'grey', height: 5}}/>
          <SearchIcon className="h-5 cursor-pointer transition duration-100 transform hover:scale-110"/>
        </div>
      </form>
    </div>
  )
}
